services:
  #################### Applications ####################
  config-service:
    image: "ghcr.io/dangtungg/config-service"
    container_name: "config-service"
    ports:
      - 8888:8888
      - 9888:9888
    environment:
      # Buildpacks environment variable to configure the number of threads in memory calculation
      - BPL_JVM_THREAD_COUNT=50
      # Buildpacks environment variable to enable debug through a socket on port 9888
      - BPL_DEBUG_ENABLED=true
      - BPL_DEBUG_PORT=9888

  catalog-service:
    depends_on:
      - polar-postgres
      - config-service
    image: "ghcr.io/dangtungg/catalog-service"
    container_name: "catalog-service"
    ports:
      - 9001:9001
      - 8001:8001
    environment:
      # Buildpacks environment variable to configure the number of threads in memory calculation
      - BPL_JVM_THREAD_COUNT=50
      # Buildpacks environment variable to enable debug through a socket on port 8001
      - BPL_DEBUG_ENABLED=true
      - BPL_DEBUG_PORT=8001
      - SPRING_CLOUD_CONFIG_URI=http://config-service:8888
      - SPRING_DATASOURCE_URL=jdbc:postgresql://polar-postgres:5432/polardb_catalog
      - SPRING_PROFILES_ACTIVE=testdata

  order-service:
    depends_on:
      - polar-postgres
      - polar-rabbitmq
      - config-service
    image: "ghcr.io/dangtungg/order-service"
    container_name: "order-service"
    ports:
      - 9002:9002
      - 8002:8002
    environment:
      # Buildpacks environment variable to enable debug through a socket on port 8002
      - BPL_DEBUG_ENABLED=true
      - BPL_DEBUG_PORT=8002
      - POLAR_CATALOG_SERVICE_URI=http://catalog-service:9001
      - SPRING_CLOUD_CONFIG_URI=http://config-service:8888
      - SPRING_R2DBC_URL=r2dbc:postgresql://polar-postgres:5432/polardb_order
      - SPRING_FLYWAY_URL=jdbc:postgresql://polar-postgres:5432/polardb_order
      - SPRING_RABBITMQ_HOST=polar-rabbitmq

  edge-service:
    depends_on:
      polar-redis:
        condition: service_started
      config-service:
        condition: service_started
      polar-keycloak:
        condition: service_healthy
      polar-ui:
        condition: service_started
    image: "ghcr.io/dangtungg/edge-service"
    container_name: "edge-service"
    ports:
      - 9009:9009
      - 8004:8004
    environment:
      # Buildpacks environment variable to enable debug through a socket on port 8000
      - BPL_DEBUG_ENABLED=true
      - BPL_DEBUG_PORT=8004
      - CATALOG_SERVICE_URL=http://catalog-service:9001
      - ORDER_SERVICE_URL=http://order-service:9002
      - SPA_URL=http://polar-ui:9004
      - SPRING_CLOUD_CONFIG_URI=http://config-service:8888
      - SPRING_DATA_REDIS_HOST=polar-redis
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_KEYCLOAK_ISSUER_URI=http://polar-keycloak:8080/realms/PolarBookshop

  dispatcher-service:
    depends_on:
      - polar-rabbitmq
      - config-service
    image: "ghcr.io/dangtungg/dispatcher-service"
    container_name: dispatcher-service
    ports:
      - 9003:9003
      - 8003:8003
    environment:
      # Buildpacks environment variable to enable debug through a socket on port 8002
      - BPL_DEBUG_ENABLED=true
      - BPL_DEBUG_PORT=8003
      - SPRING_CLOUD_CONFIG_URI=http://config-service:8888
      - SPRING_RABBITMQ_HOST=polar-rabbitmq

  polar-ui:
    image: "ghcr.io/polarbookshop/polar-ui:v1"
    container_name: polar-ui
    ports:
      - 9004:9004
    environment:
      - PORT=9004

  #################### Backing Services ####################
  polar-postgres:
    image: postgres:latest
    container_name: polar-postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=123456
    volumes:
      - polar-postgres-vol:/var/lib/postgresql/data
      - ./postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin"]
      interval: 10s
      timeout: 5s
      retries: 5

  polar-redis:
    image: redis:latest
    container_name: polar-redis
    ports:
      - 6379:6379
    volumes:
      - polar-redis-vol:/data

  polar-rabbitmq:
    image: rabbitmq:3.13-management
    container_name: polar-rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    volumes:
      - polar-rabbitmq-vol:/var/lib/rabbitmq
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf

  polar-keycloak:
    image: quay.io/keycloak/keycloak:25.0.5
    container_name: polar-keycloak
    command: start-dev
    environment:
      - KEYCLOAK_ADMIN=admin
      - KEYCLOAK_ADMIN_PASSWORD=123456
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://polar-postgres:5432/keycloak
      - KC_DB_USERNAME=admin
      - KC_DB_PASSWORD=123456
    ports:
      - 8080:8080
    depends_on:
      polar-postgres:
        condition: service_healthy
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "exec 3<>/dev/tcp/127.0.0.1/9000;echo -e 'GET /health/ready HTTP/1.1\r\nhost: http://localhost\r\nConnection: close\r\n\r\n' >&3;if [ $? -eq 0 ]; then echo 'Healthcheck Successful';exit 0;else echo 'Healthcheck Failed';exit 1;fi;",
        ]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  polar-postgres-vol:
  polar-redis-vol:
  polar-rabbitmq-vol:
